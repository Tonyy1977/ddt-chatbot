"use strict";(()=>{var a={};a.id=273,a.ids=[273],a.modules={1428:a=>{a.exports=import("axios")},1774:(a,b,c)=>{c.d(b,{A:()=>h});var d=c(6037);let e=process.env.MONGODB_URI;if(!e)throw Error("❌ MongoDB URI is not defined in environment variables");let f=global.mongoose||{conn:null,promise:null};async function g(){return f.conn||(f.promise||(f.promise=d.connect(e,{bufferCommands:!1,dbName:"micah"})),f.conn=await f.promise),f.conn}global.mongoose=f;let h=g},4176:(a,b,c)=>{c.d(b,{A:()=>f});var d=c(6037);let e=new d.Schema({sessionId:{type:String,required:!0},sender:{type:String,enum:["user","bot"],required:!0},text:{type:d.Schema.Types.Mixed,required:!0},timestamp:{type:Date,default:Date.now},userType:{type:String,enum:["guest","registered"],default:"guest"},questionMatched:{type:String,default:""},topics:{type:[String],default:[]}}),f=d.models.Message||d.model("Message",e)},4900:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>k,default:()=>j});var e=c(1774),f=c(4176),g=c(1428),h=a([g]);g=(h.then?(await h)():h)[0];let k={api:{bodyParser:!1}};async function i(a){return new Promise((b,c)=>{let d="";a.on("data",a=>d+=a),a.on("end",()=>{try{b(JSON.parse(d))}catch{c(Error("Invalid JSON"))}}),a.on("error",c)})}async function j(a,b){let c,d,h,j;if(await (0,e.A)(),"POST"!==a.method)return b.status(405).json({error:"Only POST allowed"});try{d=(c=await i(a)).sessionId||"guest",delete c.sessionId}catch(a){return console.error("❌ JSON parse error:",a.message),b.status(400).json({error:"Invalid JSON"})}if(console.log("\uD83D\uDCE8 Received body:",JSON.stringify(c)),!c.model||!Array.isArray(c.messages)||0===c.messages.length)return b.status(400).json({error:"Payload must include a `model` string and a non-empty `messages` array"});try{h=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${process.env.OPENAI_API_KEY}`,"Content-Type":"application/json"},body:JSON.stringify(c)}),j=await h.json();let a=c.messages[c.messages.length-1],b=j.choices?.[0]?.message?.content;b||console.warn("⚠️ OpenAI response missing message content:",j);let e=[];if(a?.content){try{let b=(await g.default.post(`${process.env.BASE_URL||"http://localhost:3000"}/api/classify`,{text:a.content})).data.topic;b&&(e=[b])}catch(a){console.error("⚠️ GPT classification failed:",a.message)}await f.A.create({sessionId:d,sender:"user",text:a.content,topics:e})}b&&await f.A.create({sessionId:d,sender:"bot",text:b})}catch(a){return console.error("❌ Network / fetch error:",a),b.status(502).json({error:"Upstream request failed",details:a.message})}return h.ok?b.status(200).json(j):(console.error("❌ OpenAI error:",j),b.status(h.status).json({error:"OpenAI response failed",details:j}))}d()}catch(a){d(a)}})},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6037:a=>{a.exports=require("mongoose")},9994:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(4900),j=c(8112),k=c(8766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/chat",pathname:"/api/chat",bundlePath:"",filename:""},userland:i,distDir:".next",relativeProjectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/chat"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),l=p.instrumentationOnRequestError.bind(p),m=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/chat",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>l(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await m(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},m))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=9994));module.exports=c})();